// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnailTailBlog.WebApi.Data;

namespace SnailTailBlog.WebApi.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20210118120026_AddColumnAboutToAdmin")]
    partial class AddColumnAboutToAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.Admin", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogSubTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.Article", b =>
                {
                    b.Property<int>("ArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommentsNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creater")
                        .HasColumnType("TEXT");

                    b.Property<int>("HitNum")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PulishTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArticleID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.ArticleLabel", b =>
                {
                    b.Property<int>("ArticleID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LabelID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ArticleID", "LabelID");

                    b.HasIndex("LabelID");

                    b.ToTable("ArticleLabel");
                });

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArticleID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CommentTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cotent")
                        .HasColumnType("TEXT");

                    b.HasKey("CommentID");

                    b.HasIndex("ArticleID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.Label", b =>
                {
                    b.Property<int>("LabelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LabelName")
                        .HasColumnType("TEXT");

                    b.HasKey("LabelID");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.Article", b =>
                {
                    b.HasOne("SnailTailBlog.WebApi.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.ArticleLabel", b =>
                {
                    b.HasOne("SnailTailBlog.WebApi.Models.Article", "Article")
                        .WithMany("ArticleLabels")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailTailBlog.WebApi.Models.Label", "Label")
                        .WithMany("ArticleLabels")
                        .HasForeignKey("LabelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SnailTailBlog.WebApi.Models.Comment", b =>
                {
                    b.HasOne("SnailTailBlog.WebApi.Models.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleID");
                });
#pragma warning restore 612, 618
        }
    }
}
